class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        i = 0
        nums.sort()
        while i < len(nums):
            if i == len(nums) - 1:
                return nums[i]
            elif nums[i] == nums[i+1]:
                i += 2
            else:
                return nums[i]
 
 
交换律：a ^ b ^ c <=> a ^ c ^ b
任何数于0异或为任何数 0 ^ n => n
相同的数异或为0: n ^ n => 0
a = [2,3,2,4,4]
2 ^ 3 ^ 2 ^ 4 ^ 4等价于 2 ^ 2 ^ 4 ^ 4 ^ 3 => 0 ^ 0 ^3 => 3

class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        a = 0
        for i in nums:
            a = a ^ i
        return a
