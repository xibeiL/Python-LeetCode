'''
二叉树层次遍历（广度优先遍历）BFS
'''
class Node:
    def __init__(self,val):
        self.val = val
        self.left = None
        self.right = None
class solution:
    def BFS(self,root):
        if not root:
            return
        queue = [root]
        res = []
        while queue:
            out = queue.pop(0)
            res.append[out]
            if out.left:
                queue.append(out.left)
            if out.right:
                queue.append(out.right)
        return res
