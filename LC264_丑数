#丑数定义：因数只有2,3,5  1是特殊的丑数
#将丑数有序排列，输入n，输出第n位所对应的丑数

class Solution(object):
    def nthUglyNumber(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n < 0:
            return 0
        unli = [1]
        cur2 = 0
        cur3 = 0
        cur5 = 0
        while len(unli) <= n:
            num = min(unli[cur2]*2,unli[cur3]*3,unli[cur5]*5)
            unli.append(num)
            if num == unli[cur2]*2:
                cur2 += 1
            if num == unli[cur3]*3:
                cur3 += 1
            if num == unli[cur5]*5:
                cur5 += 1
        return unli[n-1]
  
（1）这个可以考虑动态规划的思想，要求第n个丑数，思考一下，第n个丑数是怎么来的？它一定是在第n个丑数之前的n-1个丑数中的一个，乘以2、3、5得来的。现在的问题就是，如何从前n-1个丑数中选出那个丑数来，然后又如何确定是乘以2那，还是3 或者是5那？
（2）解决办法，用一个ugly[i]表示第i+1个丑数，维护一系列丑数。
（3）用变量i2记录在ugly[]中出现的第一个丑数，且，这个丑数乘以2 大于ugly[]中最后一个丑数。 此时，很显然ugly[i2] * 2就是下一个丑数的备选值，同理选出ugly[i3] * 3、ugly[i5] * 5，然后从这三个值里面选择最小的作为下一个丑数。以此类推，直到选出n个来。
--------------------- 
作者：GorillaNotes 
来源：CSDN 
原文：https://blog.csdn.net/XX_123_1_RJ/article/details/82876296 
版权声明：本文为博主原创文章，转载请附上博文链接！
